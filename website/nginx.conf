user www-data;
worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
	worker_connections 768;
	# multi_accept on;
}

http {

	##
	# Basic Settings
	##

	sendfile on;
	tcp_nopush on;
	tcp_nodelay on;
	keepalive_timeout 65;
	types_hash_max_size 2048;
	# server_tokens off;

	# server_names_hash_bucket_size 64;
	# server_name_in_redirect off;

	include /etc/nginx/mime.types;
	default_type application/octet-stream;

	##
	# SSL Settings
	##

	ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # Dropping SSLv3, ref: POODLE
	ssl_prefer_server_ciphers on;

	##
	# Logging Settings
	##

	access_log /var/log/nginx/access.log;
	error_log /var/log/nginx/error.log;

	##
	# Gzip Settings
	##

	gzip on;

	# gzip_vary on;
	# gzip_proxied any;
	# gzip_comp_level 6;
	# gzip_buffers 16 8k;
	# gzip_http_version 1.1;
	# gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

	##
	# Virtual Host Configs
	##

	include /etc/nginx/conf.d/*.conf;
	include /etc/nginx/sites-enabled/*;

	server {
		server_name staging.bikedataproject.org;

        location / {
            proxy_pass http://localhost:5004;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection keep-alive;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-PathBase /;
            proxy_set_header Anyways-Original $request_uri;
            proxy_set_header X-Forwarded-Host $http_host;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-For $remote_addr;
            proxy_cache_bypass $http_upgrade;
            add_header X-Cache-Status $upstream_cache_status;
        }
    
		listen 443 ssl;
		listen [::]:443 ssl; # managed by Certbot
		ssl_certificate /etc/letsencrypt/live/staging.bikedataproject.org/fullchain.pem; # managed by Certbot
		ssl_certificate_key /etc/letsencrypt/live/staging.bikedataproject.org/privkey.pem; # managed by Certbot
		include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
		ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

	}

	server {	
		server_name data.bikedataproject.org;

	    location / {
		    proxy_pass http://localhost:5005;
		    proxy_http_version 1.1;
		    proxy_set_header Upgrade $http_upgrade;
		    proxy_set_header Connection keep-alive;
		    proxy_set_header Host $host;
		    proxy_set_header X-Forwarded-PathBase /;
		    proxy_set_header Anyways-Original $request_uri;
		    proxy_set_header X-Forwarded-Host $http_host;
		    proxy_set_header X-Forwarded-Proto $scheme;
		    proxy_set_header X-Forwarded-For $remote_addr;
		    proxy_cache_bypass $http_upgrade;
		    add_header X-Cache-Status $upstream_cache_status;
		}

		listen [::]:443 ssl; # managed by Certbot
    	listen 443 ssl; # managed by Certbot
    	ssl_certificate /etc/letsencrypt/live/data.bikedataproject.org/fullchain.pem; # managed by Certbot
    	ssl_certificate_key /etc/letsencrypt/live/data.bikedataproject.org/privkey.pem; # managed by Certbot
    	include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    	ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
	}

	server {	
		server_name www.bikedataproject.org;

	        location / {
		    proxy_pass http://localhost:5003;
		    proxy_http_version 1.1;
		    proxy_set_header Upgrade $http_upgrade;
		    proxy_set_header Connection keep-alive;
		    proxy_set_header Host $host;
		    proxy_set_header X-Forwarded-PathBase /;
		    proxy_set_header Anyways-Original $request_uri;
		    proxy_set_header X-Forwarded-Host $http_host;
		    proxy_set_header X-Forwarded-Proto $scheme;
		    proxy_set_header X-Forwarded-For $remote_addr;
		    proxy_cache_bypass $http_upgrade;
		    add_header X-Cache-Status $upstream_cache_status;
		}
	
		listen 443 ssl;
		listen [::]:443 ssl; # managed by Certbot
		ssl_certificate /etc/letsencrypt/live/www.bikedataproject.com/fullchain.pem; # managed by Certbot
		ssl_certificate_key /etc/letsencrypt/live/www.bikedataproject.com/privkey.pem; # managed by Certbot
		include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
		ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
	}

	server {	
		server_name bikedataproject.org;
		return 301 https://www.bikedataproject.org$request_uri;
    
		listen [::]:443 ssl ipv6only=on; # managed by Certbot
		listen 443 ssl; # managed by Certbot
		ssl_certificate /etc/letsencrypt/live/bikedataproject.org/fullchain.pem; # managed by Certbot
		ssl_certificate_key /etc/letsencrypt/live/bikedataproject.org/privkey.pem; # managed by Certbot
		include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
		ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
	}

	server {
		if ($host = www.bikedataproject.com) {
			return 301 https://www.bikedataproject.org$request_uri;
		} 
		if ($host = bikedataproject.com) {
			return 301 https://www.bikedataproject.org$request_uri;
		} 	
		server_name www.bikedataproject.com bikedataproject.com;
	
		listen [::]:443 ssl; # managed by Certbot
		listen 443 ssl; # managed by Certbot
		ssl_certificate /etc/letsencrypt/live/bikedataproject.com/fullchain.pem; # managed by Certbot
		ssl_certificate_key /etc/letsencrypt/live/bikedataproject.com/privkey.pem; # managed by Certbot
		include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
		ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
		return 404;	
	}

	server {
		if ($host = staging.bikedataproject.org) {
			return 301 https://$host$request_uri;
		} # managed by Certbot
		
		listen 80;
		listen [::]:80;	
		server_name staging.bikedataproject.org;
		return 404; # managed by Certbot
	}

	server {
		if ($host = data.bikedataproject.org) {
			return 301 https://$host$request_uri;
		} # managed by Certbot
		
		listen 80;
		listen [::]:80;	
		server_name data.bikedataproject.org;
		return 404; # managed by Certbot
	}


	server {
		if ($host = www.bikedataproject.org) {
			return 301 https://$host$request_uri;
		} # managed by Certbot

		if ($host = www.bikedataproject.org) {
			return 301 https://$host$request_uri;
		} # managed by Certbot

		listen 80;
		listen [::]:80;	
		server_name www.bikedataproject.org;
		return 404; # managed by Certbot
	}

	server {
		if ($host = bikedataproject.org) {
			return 301 https://$host$request_uri;
		} # managed by Certbot


		listen 80;
		listen [::]:80;	
		server_name bikedataproject.org;
		return 404; # managed by Certbot
	}


	server {
		if ($host = www.bikedataproject.com) {
			return 301 https://$host$request_uri;
		} # managed by Certbot


		if ($host = bikedataproject.com) {
			return 301 https://$host$request_uri;
		} # managed by Certbot
		
		listen 80;
		listen [::]:80;	
		server_name www.bikedataproject.com bikedataproject.com;
		return 404; # managed by Certbot
	}
}
